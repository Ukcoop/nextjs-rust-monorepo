services:
  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - '3080:3080'
    volumes:
      - ./output:/app/output
    environment:
      RUST_ENV: production
      DATABASE_URL: postgres://postgres:postgres@database:5432/postgres
    depends_on:
      - database
    networks:
      - app-network

  database:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
